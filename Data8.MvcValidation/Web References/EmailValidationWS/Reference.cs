//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Data8.MvcValidation.EmailValidationWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmailValidationSoap", Namespace="http://www.data-8.co.uk/integr8")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InputRecord))]
    public partial class EmailValidation : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsValidSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanseSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanseMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CodeVerifySimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CodeVerifyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmailValidation() {
            this.Url = global::Data8.MvcValidation.Properties.Settings.Default.Data8_MvcValidation_EmailValidationWS_EmailValidation;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsValidSimpleCompletedEventHandler IsValidSimpleCompleted;
        
        /// <remarks/>
        public event IsValidCompletedEventHandler IsValidCompleted;
        
        /// <remarks/>
        public event IsValidMultipleCompletedEventHandler IsValidMultipleCompleted;
        
        /// <remarks/>
        public event CleanseSimpleCompletedEventHandler CleanseSimpleCompleted;
        
        /// <remarks/>
        public event CleanseCompletedEventHandler CleanseCompleted;
        
        /// <remarks/>
        public event CleanseMultipleCompletedEventHandler CleanseMultipleCompleted;
        
        /// <remarks/>
        public event CodeVerifySimpleCompletedEventHandler CodeVerifySimpleCompleted;
        
        /// <remarks/>
        public event CodeVerifyCompletedEventHandler CodeVerifyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.data-8.co.uk/integr8/IsValidSimple", RequestNamespace="http://www.data-8.co.uk/integr8", ResponseNamespace="http://www.data-8.co.uk/integr8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailValidationOutput IsValidSimple(string username, string password, string email, EmailValidationLevel level) {
            object[] results = this.Invoke("IsValidSimple", new object[] {
                        username,
                        password,
                        email,
                        level});
            return ((EmailValidationOutput)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidSimpleAsync(string username, string password, string email, EmailValidationLevel level) {
            this.IsValidSimpleAsync(username, password, email, level, null);
        }
        
        /// <remarks/>
        public void IsValidSimpleAsync(string username, string password, string email, EmailValidationLevel level, object userState) {
            if ((this.IsValidSimpleOperationCompleted == null)) {
                this.IsValidSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidSimpleOperationCompleted);
            }
            this.InvokeAsync("IsValidSimple", new object[] {
                        username,
                        password,
                        email,
                        level}, this.IsValidSimpleOperationCompleted, userState);
        }
        
        private void OnIsValidSimpleOperationCompleted(object arg) {
            if ((this.IsValidSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidSimpleCompleted(this, new IsValidSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.data-8.co.uk/integr8/IsValid", RequestNamespace="http://www.data-8.co.uk/integr8", ResponseNamespace="http://www.data-8.co.uk/integr8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailValidationOutput IsValid(string username, string password, string email, EmailValidationLevel level, Option[] options) {
            object[] results = this.Invoke("IsValid", new object[] {
                        username,
                        password,
                        email,
                        level,
                        options});
            return ((EmailValidationOutput)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidAsync(string username, string password, string email, EmailValidationLevel level, Option[] options) {
            this.IsValidAsync(username, password, email, level, options, null);
        }
        
        /// <remarks/>
        public void IsValidAsync(string username, string password, string email, EmailValidationLevel level, Option[] options, object userState) {
            if ((this.IsValidOperationCompleted == null)) {
                this.IsValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidOperationCompleted);
            }
            this.InvokeAsync("IsValid", new object[] {
                        username,
                        password,
                        email,
                        level,
                        options}, this.IsValidOperationCompleted, userState);
        }
        
        private void OnIsValidOperationCompleted(object arg) {
            if ((this.IsValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidCompleted(this, new IsValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.data-8.co.uk/integr8/IsValidMultiple", RequestNamespace="http://www.data-8.co.uk/integr8", ResponseNamespace="http://www.data-8.co.uk/integr8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailValidationOutput[] IsValidMultiple(string username, string password, EmailValidationRequest[] requests, Option[] options) {
            object[] results = this.Invoke("IsValidMultiple", new object[] {
                        username,
                        password,
                        requests,
                        options});
            return ((EmailValidationOutput[])(results[0]));
        }
        
        /// <remarks/>
        public void IsValidMultipleAsync(string username, string password, EmailValidationRequest[] requests, Option[] options) {
            this.IsValidMultipleAsync(username, password, requests, options, null);
        }
        
        /// <remarks/>
        public void IsValidMultipleAsync(string username, string password, EmailValidationRequest[] requests, Option[] options, object userState) {
            if ((this.IsValidMultipleOperationCompleted == null)) {
                this.IsValidMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidMultipleOperationCompleted);
            }
            this.InvokeAsync("IsValidMultiple", new object[] {
                        username,
                        password,
                        requests,
                        options}, this.IsValidMultipleOperationCompleted, userState);
        }
        
        private void OnIsValidMultipleOperationCompleted(object arg) {
            if ((this.IsValidMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidMultipleCompleted(this, new IsValidMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.data-8.co.uk/integr8/CleanseSimple", RequestNamespace="http://www.data-8.co.uk/integr8", ResponseNamespace="http://www.data-8.co.uk/integr8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailCleanseOutput CleanseSimple(string username, string password, string email, EmailValidationLevel level, string title, string forename, string middleName, string surname, string company, string address) {
            object[] results = this.Invoke("CleanseSimple", new object[] {
                        username,
                        password,
                        email,
                        level,
                        title,
                        forename,
                        middleName,
                        surname,
                        company,
                        address});
            return ((EmailCleanseOutput)(results[0]));
        }
        
        /// <remarks/>
        public void CleanseSimpleAsync(string username, string password, string email, EmailValidationLevel level, string title, string forename, string middleName, string surname, string company, string address) {
            this.CleanseSimpleAsync(username, password, email, level, title, forename, middleName, surname, company, address, null);
        }
        
        /// <remarks/>
        public void CleanseSimpleAsync(string username, string password, string email, EmailValidationLevel level, string title, string forename, string middleName, string surname, string company, string address, object userState) {
            if ((this.CleanseSimpleOperationCompleted == null)) {
                this.CleanseSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanseSimpleOperationCompleted);
            }
            this.InvokeAsync("CleanseSimple", new object[] {
                        username,
                        password,
                        email,
                        level,
                        title,
                        forename,
                        middleName,
                        surname,
                        company,
                        address}, this.CleanseSimpleOperationCompleted, userState);
        }
        
        private void OnCleanseSimpleOperationCompleted(object arg) {
            if ((this.CleanseSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanseSimpleCompleted(this, new CleanseSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.data-8.co.uk/integr8/Cleanse", RequestNamespace="http://www.data-8.co.uk/integr8", ResponseNamespace="http://www.data-8.co.uk/integr8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailCleanseOutput Cleanse(string username, string password, string email, EmailValidationLevel level, BusinessInputRecord record, Option[] options) {
            object[] results = this.Invoke("Cleanse", new object[] {
                        username,
                        password,
                        email,
                        level,
                        record,
                        options});
            return ((EmailCleanseOutput)(results[0]));
        }
        
        /// <remarks/>
        public void CleanseAsync(string username, string password, string email, EmailValidationLevel level, BusinessInputRecord record, Option[] options) {
            this.CleanseAsync(username, password, email, level, record, options, null);
        }
        
        /// <remarks/>
        public void CleanseAsync(string username, string password, string email, EmailValidationLevel level, BusinessInputRecord record, Option[] options, object userState) {
            if ((this.CleanseOperationCompleted == null)) {
                this.CleanseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanseOperationCompleted);
            }
            this.InvokeAsync("Cleanse", new object[] {
                        username,
                        password,
                        email,
                        level,
                        record,
                        options}, this.CleanseOperationCompleted, userState);
        }
        
        private void OnCleanseOperationCompleted(object arg) {
            if ((this.CleanseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanseCompleted(this, new CleanseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.data-8.co.uk/integr8/CleanseMultiple", RequestNamespace="http://www.data-8.co.uk/integr8", ResponseNamespace="http://www.data-8.co.uk/integr8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailCleanseOutput[] CleanseMultiple(string username, string password, EmailCleanseRequest[] requests, Option[] options) {
            object[] results = this.Invoke("CleanseMultiple", new object[] {
                        username,
                        password,
                        requests,
                        options});
            return ((EmailCleanseOutput[])(results[0]));
        }
        
        /// <remarks/>
        public void CleanseMultipleAsync(string username, string password, EmailCleanseRequest[] requests, Option[] options) {
            this.CleanseMultipleAsync(username, password, requests, options, null);
        }
        
        /// <remarks/>
        public void CleanseMultipleAsync(string username, string password, EmailCleanseRequest[] requests, Option[] options, object userState) {
            if ((this.CleanseMultipleOperationCompleted == null)) {
                this.CleanseMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanseMultipleOperationCompleted);
            }
            this.InvokeAsync("CleanseMultiple", new object[] {
                        username,
                        password,
                        requests,
                        options}, this.CleanseMultipleOperationCompleted, userState);
        }
        
        private void OnCleanseMultipleOperationCompleted(object arg) {
            if ((this.CleanseMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanseMultipleCompleted(this, new CleanseMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.data-8.co.uk/integr8/CodeVerifySimple", RequestNamespace="http://www.data-8.co.uk/integr8", ResponseNamespace="http://www.data-8.co.uk/integr8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailCodeVerificationOutput CodeVerifySimple(string username, string password, string email) {
            object[] results = this.Invoke("CodeVerifySimple", new object[] {
                        username,
                        password,
                        email});
            return ((EmailCodeVerificationOutput)(results[0]));
        }
        
        /// <remarks/>
        public void CodeVerifySimpleAsync(string username, string password, string email) {
            this.CodeVerifySimpleAsync(username, password, email, null);
        }
        
        /// <remarks/>
        public void CodeVerifySimpleAsync(string username, string password, string email, object userState) {
            if ((this.CodeVerifySimpleOperationCompleted == null)) {
                this.CodeVerifySimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCodeVerifySimpleOperationCompleted);
            }
            this.InvokeAsync("CodeVerifySimple", new object[] {
                        username,
                        password,
                        email}, this.CodeVerifySimpleOperationCompleted, userState);
        }
        
        private void OnCodeVerifySimpleOperationCompleted(object arg) {
            if ((this.CodeVerifySimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CodeVerifySimpleCompleted(this, new CodeVerifySimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.data-8.co.uk/integr8/CodeVerify", RequestNamespace="http://www.data-8.co.uk/integr8", ResponseNamespace="http://www.data-8.co.uk/integr8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailCodeVerificationOutput CodeVerify(string username, string password, string email, Option[] options) {
            object[] results = this.Invoke("CodeVerify", new object[] {
                        username,
                        password,
                        email,
                        options});
            return ((EmailCodeVerificationOutput)(results[0]));
        }
        
        /// <remarks/>
        public void CodeVerifyAsync(string username, string password, string email, Option[] options) {
            this.CodeVerifyAsync(username, password, email, options, null);
        }
        
        /// <remarks/>
        public void CodeVerifyAsync(string username, string password, string email, Option[] options, object userState) {
            if ((this.CodeVerifyOperationCompleted == null)) {
                this.CodeVerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCodeVerifyOperationCompleted);
            }
            this.InvokeAsync("CodeVerify", new object[] {
                        username,
                        password,
                        email,
                        options}, this.CodeVerifyOperationCompleted, userState);
        }
        
        private void OnCodeVerifyOperationCompleted(object arg) {
            if ((this.CodeVerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CodeVerifyCompleted(this, new CodeVerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public enum EmailValidationLevel {
        
        /// <remarks/>
        Syntax,
        
        /// <remarks/>
        MX,
        
        /// <remarks/>
        Server,
        
        /// <remarks/>
        Address,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class EmailValidationOutput {
        
        private Status statusField;
        
        private EmailValidationResult resultField;
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public EmailValidationResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class Status {
        
        private bool successField;
        
        private string errorMessageField;
        
        private float creditsRemainingField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public float CreditsRemaining {
            get {
                return this.creditsRemainingField;
            }
            set {
                this.creditsRemainingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class EmailCodeVerificationOutput {
        
        private Status statusField;
        
        private EmailValidationResult resultField;
        
        private string codeField;
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public EmailValidationResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public enum EmailValidationResult {
        
        /// <remarks/>
        Blank,
        
        /// <remarks/>
        Invalid,
        
        /// <remarks/>
        Inconclusive,
        
        /// <remarks/>
        GreyListed,
        
        /// <remarks/>
        CatchAll,
        
        /// <remarks/>
        Valid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class EmailCleanseRequest {
        
        private string emailField;
        
        private EmailValidationLevel levelField;
        
        private BusinessInputRecord recordField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public EmailValidationLevel Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public BusinessInputRecord Record {
            get {
                return this.recordField;
            }
            set {
                this.recordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class BusinessInputRecord : InputRecord {
        
        private string companyNameField;
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BusinessInputRecord))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class InputRecord {
        
        private Name nameField;
        
        private Address addressField;
        
        /// <remarks/>
        public Name Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public Address Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class Name {
        
        private string titleField;
        
        private string forenameField;
        
        private string middleNameField;
        
        private string surnameField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Forename {
            get {
                return this.forenameField;
            }
            set {
                this.forenameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class Address {
        
        private string[] linesField;
        
        /// <remarks/>
        public string[] Lines {
            get {
                return this.linesField;
            }
            set {
                this.linesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class EmailCleanseOutput {
        
        private Status statusField;
        
        private EmailValidationResult resultField;
        
        private bool originalValidField;
        
        private EmailTypeResult emailTypeField;
        
        private string suggestedEmailAddressField;
        
        private string commentField;
        
        private string salutationField;
        
        private string structureUsedField;
        
        private Name parsedNameField;
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public EmailValidationResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public bool OriginalValid {
            get {
                return this.originalValidField;
            }
            set {
                this.originalValidField = value;
            }
        }
        
        /// <remarks/>
        public EmailTypeResult EmailType {
            get {
                return this.emailTypeField;
            }
            set {
                this.emailTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SuggestedEmailAddress {
            get {
                return this.suggestedEmailAddressField;
            }
            set {
                this.suggestedEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Salutation {
            get {
                return this.salutationField;
            }
            set {
                this.salutationField = value;
            }
        }
        
        /// <remarks/>
        public string StructureUsed {
            get {
                return this.structureUsedField;
            }
            set {
                this.structureUsedField = value;
            }
        }
        
        /// <remarks/>
        public Name ParsedName {
            get {
                return this.parsedNameField;
            }
            set {
                this.parsedNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public enum EmailTypeResult {
        
        /// <remarks/>
        Personal,
        
        /// <remarks/>
        ISP,
        
        /// <remarks/>
        Free,
        
        /// <remarks/>
        Generic,
        
        /// <remarks/>
        Disposable,
        
        /// <remarks/>
        Blank,
        
        /// <remarks/>
        SpamTrap,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class EmailValidationRequest {
        
        private string emailField;
        
        private EmailValidationLevel levelField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public EmailValidationLevel Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.data-8.co.uk/integr8")]
    public partial class Option {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsValidSimpleCompletedEventHandler(object sender, IsValidSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailValidationOutput Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailValidationOutput)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsValidCompletedEventHandler(object sender, IsValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailValidationOutput Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailValidationOutput)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsValidMultipleCompletedEventHandler(object sender, IsValidMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailValidationOutput[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailValidationOutput[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CleanseSimpleCompletedEventHandler(object sender, CleanseSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanseSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanseSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailCleanseOutput Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailCleanseOutput)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CleanseCompletedEventHandler(object sender, CleanseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailCleanseOutput Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailCleanseOutput)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CleanseMultipleCompletedEventHandler(object sender, CleanseMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanseMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanseMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailCleanseOutput[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailCleanseOutput[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CodeVerifySimpleCompletedEventHandler(object sender, CodeVerifySimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CodeVerifySimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CodeVerifySimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailCodeVerificationOutput Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailCodeVerificationOutput)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CodeVerifyCompletedEventHandler(object sender, CodeVerifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CodeVerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CodeVerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailCodeVerificationOutput Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailCodeVerificationOutput)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591